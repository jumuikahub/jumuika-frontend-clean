name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npx prettier --check .

      - name: Run Jest tests (only if present)
        run: |
          if command -v npx >/dev/null && npx --yes jest --version >/dev/null 2>&1; then
            if ls tests/**/*.ts >/dev/null 2>&1; then
              echo "‚úÖ Running Jest tests..."
              npm test
            else
              echo "‚ö†Ô∏è No test files found, skipping Jest."
            fi
          else
            echo "‚ö†Ô∏è Jest not installed, skipping tests."
          fi

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          prod: true

      - name: Health check after deploy
        run: |
          echo "üîé Checking /api/health endpoint..."
          DEPLOY_URL="https://${{ secrets.VERCEL_PROJECT_ID }}.vercel.app/api/health"
          STATUS=$(curl -s -o response.json -w "%{http_code}" "$DEPLOY_URL")

          if [ "$STATUS" -ne 200 ]; then
            echo "‚ùå Health check failed with status $STATUS"
            cat response.json
            exit 1
          fi

          BODY=$(cat response.json | jq -r .status)
          if [ "$BODY" != "ok" ]; then
            echo "‚ùå Health check body invalid"
            cat response.json
            exit 1
          fi

          echo "‚úÖ Deployment healthy."
